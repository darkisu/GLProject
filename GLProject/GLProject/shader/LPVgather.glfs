#version 440 core
in vec2 UV;

layout (location=0) out vec4 VPLAlign;
layout (location=1) out vec4 SH00;
layout (location=2) out vec4 SHn11;
layout (location=3) out vec4 SH01;
layout (location=4) out vec4 SHp11;

uniform sampler2D VPLs;
uniform sampler2D VPLcolor;
uniform sampler2D VPLnormal;
uniform float LPVsize;
uniform float LPVres;
uniform vec3 lowerbound;

void main()
{
	vec4 tempcolor = texture(VPLs, UV);
	SH00 = vec4(0.0);
	SHn11 = vec4(0.0);
	SH01 = vec4(0.0);
	SHp11 = vec4(0.0);
	if(tempcolor.w != 0)
	{
		vec3 temp = texture(VPLs, UV).xyz;
		temp = temp - lowerbound;
		
		temp = temp / LPVsize;
		//vec3 result;
		//result.x = floor(temp.x) + 0.5;
		//result.y = floor(temp.y) + floor(temp.z)*LPVres + 0.5;
	
		VPLAlign = vec4(floor(temp.x),floor(temp.y),floor(temp.z), 1.0);

		vec4 color = texture(VPLcolor, UV);
		vec3 normal = normalize(texture(VPLnormal, UV)).xyz;
		vec4 norm;

		norm = normalize(vec4(normal, 0.0));
		SH00 += 0.8862269255*(0.2820947918 * color);
		SHn11 += ((-0.4886025119)* norm.y  ) * color * (-1.0233267079);
		SH01 += (0.4886025119 * norm.z  ) * color * 1.0233267079;
		SHp11 += ((-0.4886025119) * norm.x  ) * color * (-1.0233267079);


	}
	else
		VPLAlign = vec4(0.0);
}
