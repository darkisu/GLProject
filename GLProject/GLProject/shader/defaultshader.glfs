#version 440 core

//Default Variables
in vec2 TexCoords;
in vec3 Normal;
in vec3 FragPos;
in vec4 depthPos;

uniform sampler2D texture_diffuse1;
uniform sampler2DShadow depthTexture;
uniform vec3 Ka;
uniform vec3 Kd;
uniform vec3 Ks;


//----------------

layout (location = 0) out vec3 color;

uniform vec3 LightPos;
uniform vec3 LightColor;
uniform vec3 ViewPos;


void main()
{    
    vec4 ObjectColor = texture(texture_diffuse1, TexCoords);

    //ambient
    vec3 ambient = 0 * LightColor;      //tuned for sponza.obj
    //vec3 ambient = Ka * LightColor;  

    //diffuse
    vec3 norm = normalize(Normal);
    vec3 lightDir = normalize(LightPos - FragPos);
    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * 1.2 * LightColor;      //tuned for sponza.obj
    //vec3 diffuse = diff * Kd * LightColor;


    // Specular
    vec3 viewDir = normalize(ViewPos - FragPos);
    vec3 reflectDir = reflect(-lightDir, norm);  
    float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32);
    vec3 specular = Ks * spec * LightColor;  

	//shadow

	float bias = 0.001f;
	vec4 shadowPos = vec4(depthPos.xy, depthPos.z - bias, depthPos.w);

	float isShadow = textureProj(depthTexture, shadowPos);
	//isShadow = isShadow > 0 ? 1.0f : 0.0f;
    vec3 result =  (ambient + isShadow * (diffuse + specular)) * vec3(ObjectColor);  
    color = result ;
	//color= vec3(1.0f);
}